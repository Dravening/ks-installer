---

- name: ks-notification | Getting ks-notification installation files
  copy:
    src: "{{ item }}"
    dest: "{{ d3os_dir }}/"
  loop:
    - notification
  tags:
    - upgrade

- name: ks-notification | Checking notification-svc
  shell: >
    {{ bin_dir }}/kubectl get svc -n d3os-alerting-system
  register: notification_svc
  failed_when: false

- name: ks-notification | Checking notification image version
  shell: >
    {{ bin_dir }}/kubectl get deploy -n d3os-alerting-system notification-deployment
    -o=jsonpath='{.spec.template.spec.containers[0].image}'
  register: notification_image
  failed_when: false

- import_tasks: save-config.yaml
  when:
    - notification_svc.stdout.find("notification") != -1
    - notification_image.stdout.find("notification:advanced-2.0.0") != -1

- name: ks-notification | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ d3os_dir }}/notification/{{ item.file }}"
  with_items:
    - { type: apiserver, file: notification.yaml }
    - { type: ctrl, file: notification-db-ctrl-job.yaml }
    - { type: init, file: notification-db-init-job.yaml }
  tags:
    - upgrade

- name: ks-notification | Checking db-ctrl-job
  shell: "{{ bin_dir }}/kubectl get job -n d3os-alerting-system"
  register: result
  tags:
    - upgrade

- name: ks-notification | Deleting db-ctrl-job
  shell: "{{ bin_dir }}/kubectl -n d3os-alerting-system delete jobs.batch notification-db-ctrl-job"
  when: result.stdout.find("notification-db-ctrl-job") != -1
  tags:
    - upgrade

- name: ks-notification | Deleting db-init-job
  shell: "{{ bin_dir }}/kubectl -n d3os-alerting-system delete jobs.batch notification-db-init-job"
  when: result.stdout.find("notification-db-init-job") != -1
  tags:
    - upgrade

- name: ks-notification | Init ks-notification
  shell: "{{ bin_dir }}/kubectl apply -f {{ d3os_dir }}/notification/notification-db-init-job.yaml"

- name: ks-notification | Ctrl ks-notification
  shell: "{{ bin_dir }}/kubectl apply -f {{ d3os_dir }}/notification/notification-db-ctrl-job.yaml"
  tags:
    - upgrade

- name: ks-notification | Deploying ks-notification
  shell: "{{ bin_dir }}/kubectl apply -f {{ d3os_dir }}/notification/notification.yaml"
  tags:
    - upgrade


- name: ks-notification | Importing ks-notification status
  shell: >
    {{ bin_dir }}/kubectl patch cc ks-installer
    --type merge
    -p '{"status": {"notification": {"status": "enabled", "enabledTime": "{{ lookup('pipe','date  +%Y-%m-%dT%H:%M:%S%Z') }}"}}}'
    -n d3os-system
  register: cc_result
  failed_when: "cc_result.stderr and 'Warning' not in cc_result.stderr"
  until: cc_result is succeeded
  retries: 5
  delay: 3